.comp 920 01011101001
.start __program1_Start
.depend "StdLibMisc"
.depend "StdArrayExtensions"
.depend "StdListExtensions"
.depend "StdLib"
.depend "StdMaybe"
.depend "_SystemEnum"
.depend "StdEnum"
.depend "StdMisc"
.depend "StdFunc"
.depend "StdCharList"
.depend "StdTuple"
.depend "StdOrdList"
.depend "StdList"
.depend "StdClass"
.depend "StdFile"
.depend "StdString"
.depend "_SystemArray"
.depend "StdArray"
.depend "StdChar"
.depend "StdReal"
.depend "StdInt"
.depend "StdOverloaded"
.depend "StdBool"
.depend "StdEnv"
.endinfo
.module m_program1 "program1"
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc _ind
.implab _indirection _eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.implab e_StdMaybe_sisJust
.implab e_StdMaybe_sfromJust
.implab e_StdList_s==;85
.impdesc e_StdString_dtoString;5
.implab e_StdString_ntoString;5
.impdesc e_StdInt_dtoInt;23
.implab e_StdInt_ntoInt;23
.desc d48 _hnf _hnf 0 0 "Leaf"
.desc d49 _hnf _add_arg 3 0 "Bin"
.desc d50 _hnf _add_arg 2 0 "Rose"
.record r40 aa 2 0 "serialize;"
.export __program1_Start
.o 0 0
__program1_Start
	build _ 0 n3
.d 1 0
	jmp _driver
.n 0 _
.o 1 0
n3
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea3
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 0 0
ea3
.o 0 0
s3
	buildh _Nil 0
	buildI 3
	buildh _Cons 2
	buildI 2
	buildh _Cons 2
	buildI 1
	buildh _Cons 2
.d 1 0
	jmp s26
.o 1 0
s26
	buildh _Nil 0
	buildAC "ln"
	buildh ARRAY 1
	buildh _Cons 2
	create
	push_a 2
	push_a 2
	update_a 2 3
	update_a 0 2
	pop_a 1
.d 3 0
	jsr s24
.o 1 0
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr s23
.o 1 0
	push_a 0
.d 1 0
	jsr e_StdMaybe_sisJust
.o 0 1 b
	jmp_false else.1
	push_a 0
	updatepop_a 0 1
.d 1 0
	jsr e_StdMaybe_sfromJust
.o 1 0
	repl_args 2 2
	jsr_eval 0
	update_a 0 1
	pop_a 1
	push_a 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jmp e_StdList_s==;85
else.1
	pop_a 2
	pushB FALSE
.d 0 1 b
	rtn
.n 2 _ ea24
.o 1 0
n24
	push_node _cycle_in_spine 2
.o 3 0
ea24
	jsr_eval 0
.o 3 0
s24
	eq_desc _Nil 0 0
	jmp_true case.2
	jmp case.3
case.2
	push_a 1
	buildAC "Nil"
	buildh ARRAY 1
	fillh _Cons 2 4
	pop_a 2
.d 1 0
	rtn
case.3
	repl_args 2 2
	push_a 2
	buildAC ")"
	buildh ARRAY 1
	buildh _Cons 2
	push_a 2
	build _ 2 n24
	push_a 1
	build _ 2 n8
	buildAC "Cons"
	buildh ARRAY 1
	buildh _Cons 2
	buildAC "("
	buildh ARRAY 1
	fillh _Cons 2 5
	pop_a 3
.d 1 0
	rtn
.o 2 0
s23
	eq_desc _Cons 2 0
	jmp_true case.4
	jmp case.5
case.4
	repl_args 2 2
	jsr_eval 0
	push_array 0
	eqAC_a "Nil"
	jmp_true case.6
	push_array 0
	eqAC_a "("
	jmp_true case.7
	pop_a 1
	jmp case.5
case.6
	buildh _Nil 0
	push_a 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Tuple 2
	fillh e_StdMaybe_dJust 1 3
	pop_a 2
.d 1 0
	rtn
case.7
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.8
	pop_a 1
	jmp case.5
case.8
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 0
	push_array 0
	eqAC_a "Cons"
	jmp_true case.9
	pop_a 3
	jmp case.5
case.9
	push_a 1
	jsr_eval 0
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 5
	updatepop_a 0 4
.d 2 0
	jsr s7
.o 1 0
.d 2 0
	jmp s31
case.5
	fillh e_StdMaybe_dNothing 0 1
	pop_a 1
.d 1 0
	rtn
.o 2 0
s31
	eq_desc e_StdMaybe_dJust 1 0
	jmp_true case.10
	jmp case.11
case.10
	repl_args 1 1
	jsr_eval 0
	repl_args 2 2
	push_a 1
	jsr_eval 0
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr s23
.o 1 0
	push_a 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp s30
case.11
	fillh e_StdMaybe_dNothing 0 1
	pop_a 1
.d 1 0
	rtn
.o 3 0
s30
	eq_desc e_StdMaybe_dJust 1 0
	jmp_true case.12
	jmp case.13
case.12
	repl_args 1 1
	jsr_eval 0
	repl_args 2 2
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.14
	pop_a 1
	jmp case.13
case.14
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 0
	push_array 0
	eqAC_a ")"
	jmp_true case.15
	pop_a 3
	jmp case.13
case.15
	push_a 2
	push_a 5
	buildh _Cons 2
	push_a 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Tuple 2
	fillh e_StdMaybe_dJust 1 6
	pop_a 5
.d 1 0
	rtn
case.13
	fillh e_StdMaybe_dNothing 0 2
	pop_a 2
.d 1 0
	rtn
.n 2 _ ea8
.o 1 0
n8
	push_node _cycle_in_spine 2
.o 3 0
ea8
.o 3 0
s8
	push_a 0
	build _ 1 e_StdString_ntoString;5
	push_a 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	fillh _Cons 2 4
	pop_a 2
.d 1 0
	rtn
.o 2 0
s7
	eq_desc _Cons 2 0
	jmp_true case.16
	jmp case.17
case.16
	repl_args 2 2
	push_a 0
	build _ 1 e_StdInt_ntoInt;23
	push_a 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Tuple 2
	fillh e_StdMaybe_dJust 1 3
	pop_a 2
.d 1 0
	rtn
case.17
	fillh e_StdMaybe_dNothing 0 1
	pop_a 1
.d 1 0
	rtn
