str(mean.BN2)
adj = matrix(0L, ncol = nSize, nrow = nSize,
dimnames = list(nodes[1:nSize], nodes[1:nSize]))
adj["Unsecure", "Depression"] = 1L
adj["Unsecure", "Weapon"] = 1L
adj["Age", "Alcohol"] = 1L
adj["Age", "Weapon"] = 1L
adj["Sports", "Unsecure"] = 1L
adj["Sports", "Depression"] = 1L
adj["Alcohol", "Grades"] = 1L
adj["Alcohol", "Weapon"] = 1L
adj["Depression", "Alcohol"] = 1L
adj["Fight", "Grades"] = 1L
adj["Fight", "Weapon"] = 1L
adj["Sex", "Grades"] = 1L
adj["Sex", "Weapon"] = 1L
adj["Sex", "Fight"] = 1L
adj["Bullied", "Depression"] = 1L
adj["Bullied", "Unsecure"] = 1L
adj["Bullied", "Fight"] = 1L
adj["Race", "Grades"] = 1L
adj["Race", "Bullied"] = 1L
adj["Race", "Fight"] = 1L
adj["Grades", "Weapon"] = 1L
# NEW CONNECTIONS ADDED
#adj["Fight", "Alcohol"] = 1L          # +.001
adj["Fight", "Unsecure"] = 1L         # -.021
adj["Age", "Bullied"] = 1L            # -.01
#adj["Sex", "Depression"] = 1L         # -.008
adj["Unsecure", "Alcohol"] = 1L       #-.021
#####adj["Race", "Alcohol"] = 1L
#adj["Race", "Unsecure"] = 1L          #-.015
#adj["Sex", "Unsecure"] = 1L           #-.023
adj["Age", "Depression"] = 1L         #-.028
#adj["Age", "Fight"] = 1L              #-.012
#adj["Unsecure", "Grades"] = 1L        #-.008
e = empty.graph(nodes)
amat(e) = adj
results.cv = bn.cv(my.data, e , loss = "pred", k=10,
loss.args = list(target = "Weapon"))
(features <- attributes(results.cv))
mean.BN2 <- features$mean
print("The mean loss value for the first network was: ")
str(mean.BN1)
print("The mean loss value for the second network was: ")
str(mean.BN2)
adj = matrix(0L, ncol = nSize, nrow = nSize,
dimnames = list(nodes[1:nSize], nodes[1:nSize]))
adj["Unsecure", "Depression"] = 1L
adj["Unsecure", "Weapon"] = 1L
adj["Age", "Alcohol"] = 1L
adj["Age", "Weapon"] = 1L
adj["Sports", "Unsecure"] = 1L
adj["Sports", "Depression"] = 1L
adj["Alcohol", "Grades"] = 1L
adj["Alcohol", "Weapon"] = 1L
adj["Depression", "Alcohol"] = 1L
adj["Fight", "Grades"] = 1L
adj["Fight", "Weapon"] = 1L
adj["Sex", "Grades"] = 1L
adj["Sex", "Weapon"] = 1L
adj["Sex", "Fight"] = 1L
adj["Bullied", "Depression"] = 1L
adj["Bullied", "Unsecure"] = 1L
adj["Bullied", "Fight"] = 1L
adj["Race", "Grades"] = 1L
adj["Race", "Bullied"] = 1L
adj["Race", "Fight"] = 1L
adj["Grades", "Weapon"] = 1L
# NEW CONNECTIONS ADDED
#adj["Fight", "Alcohol"] = 1L          # +.001
adj["Fight", "Unsecure"] = 1L         # -.021
adj["Age", "Bullied"] = 1L            # -.01
#adj["Sex", "Depression"] = 1L         # -.008
adj["Unsecure", "Alcohol"] = 1L       #-.021
#####adj["Race", "Alcohol"] = 1L
#adj["Race", "Unsecure"] = 1L          #-.015
#adj["Sex", "Unsecure"] = 1L           #-.023
adj["Age", "Depression"] = 1L         #-.028
#adj["Age", "Fight"] = 1L              #-.012
#adj["Unsecure", "Grades"] = 1L        #-.008
e = empty.graph(nodes)
amat(e) = adj
results.cv = bn.cv(my.data, e , loss = "pred", k=10,
loss.args = list(target = "Weapon"))
(features <- attributes(results.cv))
mean.BN2 <- features$mean
print("The mean loss value for the first network was: ")
str(mean.BN1)
print("The mean loss value for the second network was: ")
str(mean.BN2)
adj = matrix(0L, ncol = nSize, nrow = nSize,
dimnames = list(nodes[1:nSize], nodes[1:nSize]))
adj["Unsecure", "Depression"] = 1L
adj["Unsecure", "Weapon"] = 1L
adj["Age", "Alcohol"] = 1L
adj["Age", "Weapon"] = 1L
adj["Sports", "Unsecure"] = 1L
adj["Sports", "Depression"] = 1L
adj["Alcohol", "Grades"] = 1L
adj["Alcohol", "Weapon"] = 1L
adj["Depression", "Alcohol"] = 1L
adj["Fight", "Grades"] = 1L
adj["Fight", "Weapon"] = 1L
adj["Sex", "Grades"] = 1L
adj["Sex", "Weapon"] = 1L
adj["Sex", "Fight"] = 1L
adj["Bullied", "Depression"] = 1L
adj["Bullied", "Unsecure"] = 1L
adj["Bullied", "Fight"] = 1L
adj["Race", "Grades"] = 1L
adj["Race", "Bullied"] = 1L
adj["Race", "Fight"] = 1L
adj["Grades", "Weapon"] = 1L
# NEW CONNECTIONS ADDED
#adj["Fight", "Alcohol"] = 1L          # +.001
adj["Fight", "Unsecure"] = 1L         # -.021
adj["Age", "Bullied"] = 1L            # -.01
#adj["Sex", "Depression"] = 1L         # -.008
adj["Unsecure", "Alcohol"] = 1L       #-.021
#####adj["Race", "Alcohol"] = 1L
#adj["Race", "Unsecure"] = 1L          #-.015
#adj["Sex", "Unsecure"] = 1L           #-.023
adj["Age", "Depression"] = 1L         #-.028
#adj["Age", "Fight"] = 1L              #-.012
#adj["Unsecure", "Grades"] = 1L        #-.008
e = empty.graph(nodes)
amat(e) = adj
results.cv = bn.cv(my.data, e , loss = "pred", k=10,
loss.args = list(target = "Weapon"))
(features <- attributes(results.cv))
mean.BN2 <- features$mean
print("The mean loss value for the first network was: ")
str(mean.BN1)
print("The mean loss value for the second network was: ")
str(mean.BN2)
adj = matrix(0L, ncol = nSize, nrow = nSize,
dimnames = list(nodes[1:nSize], nodes[1:nSize]))
adj["Unsecure", "Depression"] = 1L
adj["Unsecure", "Weapon"] = 1L
adj["Age", "Alcohol"] = 1L
adj["Age", "Weapon"] = 1L
adj["Sports", "Unsecure"] = 1L
adj["Sports", "Depression"] = 1L
adj["Alcohol", "Grades"] = 1L
adj["Alcohol", "Weapon"] = 1L
adj["Depression", "Alcohol"] = 1L
adj["Fight", "Grades"] = 1L
adj["Fight", "Weapon"] = 1L
adj["Sex", "Grades"] = 1L
adj["Sex", "Weapon"] = 1L
adj["Sex", "Fight"] = 1L
adj["Bullied", "Depression"] = 1L
adj["Bullied", "Unsecure"] = 1L
adj["Bullied", "Fight"] = 1L
adj["Race", "Grades"] = 1L
adj["Race", "Bullied"] = 1L
adj["Race", "Fight"] = 1L
adj["Grades", "Weapon"] = 1L
# NEW CONNECTIONS ADDED
#adj["Fight", "Alcohol"] = 1L          # +.001
adj["Fight", "Unsecure"] = 1L         # -.021
adj["Age", "Bullied"] = 1L            # -.01
#adj["Sex", "Depression"] = 1L         # -.008
adj["Unsecure", "Alcohol"] = 1L       #-.021
#####adj["Race", "Alcohol"] = 1L
#adj["Race", "Unsecure"] = 1L          #-.015
#adj["Sex", "Unsecure"] = 1L           #-.023
adj["Age", "Depression"] = 1L         #-.028
#adj["Age", "Fight"] = 1L              #-.012
#adj["Unsecure", "Grades"] = 1L        #-.008
e = empty.graph(nodes)
amat(e) = adj
results.cv = bn.cv(my.data, e , loss = "pred", k=10,
loss.args = list(target = "Weapon"))
(features <- attributes(results.cv))
mean.BN2 <- features$mean
print("The mean loss value for the first network was: ")
str(mean.BN1)
print("The mean loss value for the second network was: ")
str(mean.BN2)
adj = matrix(0L, ncol = nSize, nrow = nSize,
dimnames = list(nodes[1:nSize], nodes[1:nSize]))
adj["Unsecure", "Depression"] = 1L
adj["Unsecure", "Weapon"] = 1L
adj["Age", "Alcohol"] = 1L
adj["Age", "Weapon"] = 1L
adj["Sports", "Unsecure"] = 1L
adj["Sports", "Depression"] = 1L
adj["Alcohol", "Grades"] = 1L
adj["Alcohol", "Weapon"] = 1L
adj["Depression", "Alcohol"] = 1L
adj["Fight", "Grades"] = 1L
adj["Fight", "Weapon"] = 1L
adj["Sex", "Grades"] = 1L
adj["Sex", "Weapon"] = 1L
adj["Sex", "Fight"] = 1L
adj["Bullied", "Depression"] = 1L
adj["Bullied", "Unsecure"] = 1L
adj["Bullied", "Fight"] = 1L
adj["Race", "Grades"] = 1L
adj["Race", "Bullied"] = 1L
adj["Race", "Fight"] = 1L
adj["Grades", "Weapon"] = 1L
# NEW CONNECTIONS ADDED
#adj["Fight", "Alcohol"] = 1L          # +.001
adj["Fight", "Unsecure"] = 1L         # -.021
adj["Age", "Bullied"] = 1L            # -.01
#adj["Sex", "Depression"] = 1L         # -.008
adj["Unsecure", "Alcohol"] = 1L       #-.021
#####adj["Race", "Alcohol"] = 1L
#adj["Race", "Unsecure"] = 1L          #-.015
#adj["Sex", "Unsecure"] = 1L           #-.023
adj["Age", "Depression"] = 1L         #-.028
#adj["Age", "Fight"] = 1L              #-.012
#adj["Unsecure", "Grades"] = 1L        #-.008
e = empty.graph(nodes)
amat(e) = adj
results.cv = bn.cv(my.data, e , loss = "pred", k=10,
loss.args = list(target = "Weapon"))
(features <- attributes(results.cv))
mean.BN2 <- features$mean
print("The mean loss value for the first network was: ")
str(mean.BN1)
print("The mean loss value for the second network was: ")
str(mean.BN2)
adj = matrix(0L, ncol = nSize, nrow = nSize,
dimnames = list(nodes[1:nSize], nodes[1:nSize]))
adj["Unsecure", "Depression"] = 1L
adj["Unsecure", "Weapon"] = 1L
adj["Age", "Alcohol"] = 1L
adj["Age", "Weapon"] = 1L
adj["Sports", "Unsecure"] = 1L
adj["Sports", "Depression"] = 1L
adj["Alcohol", "Grades"] = 1L
adj["Alcohol", "Weapon"] = 1L
adj["Depression", "Alcohol"] = 1L
adj["Fight", "Grades"] = 1L
adj["Fight", "Weapon"] = 1L
adj["Sex", "Grades"] = 1L
adj["Sex", "Weapon"] = 1L
adj["Sex", "Fight"] = 1L
adj["Bullied", "Depression"] = 1L
adj["Bullied", "Unsecure"] = 1L
adj["Bullied", "Fight"] = 1L
adj["Race", "Grades"] = 1L
adj["Race", "Bullied"] = 1L
adj["Race", "Fight"] = 1L
adj["Grades", "Weapon"] = 1L
# NEW CONNECTIONS ADDED
#adj["Fight", "Alcohol"] = 1L          # +.001
adj["Fight", "Unsecure"] = 1L         # -.021
adj["Age", "Bullied"] = 1L            # -.01
#adj["Sex", "Depression"] = 1L         # -.008
adj["Unsecure", "Alcohol"] = 1L       #-.021
#####adj["Race", "Alcohol"] = 1L
#adj["Race", "Unsecure"] = 1L          #-.015
#adj["Sex", "Unsecure"] = 1L           #-.023
adj["Age", "Depression"] = 1L         #-.028
#adj["Age", "Fight"] = 1L              #-.012
#adj["Unsecure", "Grades"] = 1L        #-.008
e = empty.graph(nodes)
amat(e) = adj
results.cv = bn.cv(my.data, e , loss = "pred", k=10,
loss.args = list(target = "Weapon"))
(features <- attributes(results.cv))
mean.BN2 <- features$mean
print("The mean loss value for the first network was: ")
str(mean.BN1)
print("The mean loss value for the second network was: ")
str(mean.BN2)
adj = matrix(0L, ncol = nSize, nrow = nSize,
dimnames = list(nodes[1:nSize], nodes[1:nSize]))
adj["Unsecure", "Depression"] = 1L
adj["Unsecure", "Weapon"] = 1L
adj["Age", "Alcohol"] = 1L
adj["Age", "Weapon"] = 1L
adj["Sports", "Unsecure"] = 1L
adj["Sports", "Depression"] = 1L
adj["Alcohol", "Grades"] = 1L
adj["Alcohol", "Weapon"] = 1L
adj["Depression", "Alcohol"] = 1L
adj["Fight", "Grades"] = 1L
adj["Fight", "Weapon"] = 1L
adj["Sex", "Grades"] = 1L
adj["Sex", "Weapon"] = 1L
adj["Sex", "Fight"] = 1L
adj["Bullied", "Depression"] = 1L
adj["Bullied", "Unsecure"] = 1L
adj["Bullied", "Fight"] = 1L
adj["Race", "Grades"] = 1L
adj["Race", "Bullied"] = 1L
adj["Race", "Fight"] = 1L
adj["Grades", "Weapon"] = 1L
# NEW CONNECTIONS ADDED
#adj["Fight", "Alcohol"] = 1L          # +.001
adj["Fight", "Unsecure"] = 1L         # -.021
adj["Age", "Bullied"] = 1L            # -.01
#adj["Sex", "Depression"] = 1L         # -.008
adj["Unsecure", "Alcohol"] = 1L       #-.021
#####adj["Race", "Alcohol"] = 1L
#adj["Race", "Unsecure"] = 1L          #-.015
#adj["Sex", "Unsecure"] = 1L           #-.023
adj["Age", "Depression"] = 1L         #-.028
#adj["Age", "Fight"] = 1L              #-.012
#adj["Unsecure", "Grades"] = 1L        #-.008
e = empty.graph(nodes)
amat(e) = adj
results.cv = bn.cv(my.data, e , loss = "pred", k=10,
loss.args = list(target = "Weapon"))
(features <- attributes(results.cv))
mean.BN2 <- features$mean
print("The mean loss value for the first network was: ")
str(mean.BN1)
print("The mean loss value for the second network was: ")
str(mean.BN2)
adj = matrix(0L, ncol = nSize, nrow = nSize,
dimnames = list(nodes[1:nSize], nodes[1:nSize]))
adj["Unsecure", "Depression"] = 1L
adj["Unsecure", "Weapon"] = 1L
adj["Age", "Alcohol"] = 1L
adj["Age", "Weapon"] = 1L
adj["Sports", "Unsecure"] = 1L
adj["Sports", "Depression"] = 1L
adj["Alcohol", "Grades"] = 1L
adj["Alcohol", "Weapon"] = 1L
adj["Depression", "Alcohol"] = 1L
adj["Fight", "Grades"] = 1L
adj["Fight", "Weapon"] = 1L
adj["Sex", "Grades"] = 1L
adj["Sex", "Weapon"] = 1L
adj["Sex", "Fight"] = 1L
adj["Bullied", "Depression"] = 1L
adj["Bullied", "Unsecure"] = 1L
adj["Bullied", "Fight"] = 1L
adj["Race", "Grades"] = 1L
adj["Race", "Bullied"] = 1L
adj["Race", "Fight"] = 1L
adj["Grades", "Weapon"] = 1L
# NEW CONNECTIONS ADDED
#adj["Fight", "Alcohol"] = 1L          # +.001
adj["Fight", "Unsecure"] = 1L         # -.021
adj["Age", "Bullied"] = 1L            # -.01
#adj["Sex", "Depression"] = 1L         # -.008
adj["Unsecure", "Alcohol"] = 1L       #-.021
#####adj["Race", "Alcohol"] = 1L
#adj["Race", "Unsecure"] = 1L          #-.015
#adj["Sex", "Unsecure"] = 1L           #-.023
adj["Age", "Depression"] = 1L         #-.028
#adj["Age", "Fight"] = 1L              #-.012
#adj["Unsecure", "Grades"] = 1L        #-.008
e = empty.graph(nodes)
amat(e) = adj
results.cv = bn.cv(my.data, e , loss = "pred", k=10,
loss.args = list(target = "Weapon"))
(features <- attributes(results.cv))
mean.BN2 <- features$mean
print("The mean loss value for the first network was: ")
str(mean.BN1)
print("The mean loss value for the second network was: ")
str(mean.BN2)
wd <- getSrcDirectory(function(x) {x})
library (dagitty) # if it doesn't work, first run: install.packages('dagitty', dependencies = TRUE)
# Load the data
wd <- getSrcDirectory(function(x) {x})
setwd(wd)
my.data.path <- paste(getwd(), "ProjectData.csv", sep="/")
my.data.path <- "D:/Dropbox/Bayesian networks - Assignment/Assignment 2/ProjectData.csv"
library(bnlearn)
library(igraph)
wd <- getSrcDirectory(function(x) {x})
setwd(wd)
my.data.path <- paste(getwd(), "ProjectData.csv", sep="/")
setwd("D:/Dropbox/Bayesian networks - Assignment/Assignment 2")
library(bnlearn)
library(igraph)
wd <- getSrcDirectory(function(x) {x})
setwd(wd)
my.data.path <- paste(getwd(), "ProjectData.csv", sep="/")
my.data.path <- paste(getwd(), "ProjectData.csv", sep="/")
my.data <- read.csv(my.data.path,sep=";")
my.data <- data.frame(lapply(my.data, factor))
nodes <- c("Unsecure", "Weapon", "Age", "Sports", "Alcohol", "Depression",
"Grades","Fight","Sex","Bullied","Race")
nSize <- length(nodes)
mmhc.dag.1 = moral(mmhc(my.data, restart=0, perturb=1))
mmhc.dag.2 = moral(mmhc(my.data, restart=5, perturb=1))
mmhc.dag.3 = moral(mmhc(my.data, restart=10, perturb=1))
mmhc.dag.4 = moral(mmhc(my.data, restart=20, perturb=1))
par(mfrow = c(2,2))
plot(mmhc.dag.1, main = "MMHC (Restart = 0)")
plot(mmhc.dag.2, main = "MMHC (Restart = 5)")
plot(mmhc.dag.3, main = "MMHC (Restart = 10)")
plot(mmhc.dag.4, main = "MMHC (Restart = 20)")
mmhc.dag.1 = moral(mmhc(my.data, restart=2, perturb=1))
mmhc.dag.2 = moral(mmhc(my.data, restart=2, perturb=2))
mmhc.dag.3 = moral(mmhc(my.data, restart=2, perturb=4))
mmhc.dag.4 = moral(mmhc(my.data, restart=2, perturb=8))
par(mfrow = c(2,2))
plot(mmhc.dag.1, main = "MMHC (Restart = 2 & Perturb=1)")
plot(mmhc.dag.2, main = "MMHC (Restart = 2 & Perturb=2)")
plot(mmhc.dag.3, main = "MMHC (Restart = 2 & Perturb=4)")
plot(mmhc.dag.4, main = "MMHC (Restart = 2 & Perturb=8)")
mmhc.best.dag = moral(mmhc(my.data, restart=2, perturb=8))
plot(mmhc.best.dag, main = "MMHC (Restart = 1000 & Perturb=200)")
library(bnlearn)
library(igraph)
# Bayesian Networks --> Assignment 2
# Date: January - 2016
# Authors: Alejandro GonzΔ‚Λ‡lez Rogel
#           Athena Iakovidi
#           Juraj Susnjara
#
# Description:
# This script will compare moralized output of MMHC algorithm, output of SI-HITON-PC and
# moralized version of our manually created graph made in Assignment 1.
#
# Firstly, script will create/calculate all necessary graphs, then it will plot them
# and show comparison of each two graphs.
# User is required to press ENTER after each comparison to proceed to next one.
wd <- getSrcDirectory(function(x) {x})
setwd(wd)
my.data.path <- paste(getwd(), "ProjectData.csv", sep="/")
my.data <- read.csv(my.data.path,sep=";")
my.data <- data.frame(lapply(my.data, factor))
nodes <- c("Unsecure", "Weapon", "Age", "Sports", "Alcohol", "Depression",
"Grades","Fight","Sex","Bullied","Race")
nSize <- length(nodes)
# Moralized result of MMHC algorithm
mmhc.dag = moral(mmhc(my.data, restart=10, perturb=200))
# Result of SI-HITON-PC algorithm
si.hiton.pc.dag = si.hiton.pc(my.data, alpha = 0.05)
adj = matrix(0L, ncol = nSize, nrow = nSize,
dimnames = list(nodes[1:nSize], nodes[1:nSize]))
adj["Unsecure", "Depression"] = 1L
adj["Unsecure", "Weapon"] = 1L
adj["Age", "Alcohol"] = 1L
adj["Age", "Weapon"] = 1L
adj["Sports", "Unsecure"] = 1L
adj["Sports", "Depression"] = 1L
adj["Alcohol", "Grades"] = 1L
adj["Alcohol", "Weapon"] = 1L
adj["Depression", "Alcohol"] = 1L
adj["Fight", "Grades"] = 1L
adj["Fight", "Weapon"] = 1L
adj["Sex", "Grades"] = 1L
adj["Sex", "Weapon"] = 1L
adj["Sex", "Fight"] = 1L
adj["Bullied", "Depression"] = 1L
adj["Bullied", "Unsecure"] = 1L
adj["Bullied", "Fight"] = 1L
adj["Race", "Grades"] = 1L
adj["Race", "Bullied"] = 1L
adj["Race", "Fight"] = 1L
adj["Grades", "Weapon"] = 1L
adj["Fight", "Unsecure"] = 1L
adj["Age", "Bullied"] = 1L
adj["Unsecure", "Alcohol"] = 1L
adj["Age", "Depression"] = 1L
org.dag = empty.graph(nodes)
amat(org.dag) = adj
org.dag = moral(org.dag)
par(mfrow = c(1,2))
cat("####### Comparing SI-HITON-PC and MMHC #######\n")
plot(mmhc.dag, main = "MMHC (Restart = 10 & Perturb=200)")
plot(si.hiton.pc.dag, main = "SI-HITON-PC (Alpha = 0.05)")
adj.mmhc = amat (mmhc.dag)
connections.mmhc = sum(adj.mmhc==1)/2 # Because matrixes are symetric
adj.si.hiton.pc = amat(si.hiton.pc.dag)
connections.si.hiton.pc = sum(adj.si.hiton.pc==1)/2 # Because matrixes are symetric
cat("Edges MMHC: ", connections.mmhc, "\nEdges SI-HITON-PC: ", connections.si.hiton.pc)
tmp = adj.mmhc + adj.si.hiton.pc
dissimilarities = sum(tmp==1)/2 # Because matrixes are symetric
cat("\nNumber of different edges between graphs: ", dissimilarities)
tmp1 = graph_from_adjacency_matrix(adj.mmhc, mode = "undirected")
tmp2 = graph_from_adjacency_matrix(adj.si.hiton.pc, mode = "undirected")
meanDist.mmhc = mean_distance(tmp1, directed=FALSE, unconnected = TRUE)
meanDist.si.hiton.pc = mean_distance(tmp2, directed=FALSE, unconnected = TRUE)
cat("\nMean length distance MMHC: ", meanDist.mmhc)
cat("\nMean length distance SI-HITON-PC: ", meanDist.si.hiton.pc)
cat("\nNumber of different edges between graphs: ", dissimilarities)
par(mfrow = c(1,2))
cat("####### Comparing MMHC and manually created graph #######\n")
plot(mmhc.dag, main = "MMHC (Restart = 10 & Perturb=200)")
plot(org.dag, main = "Manually created graph")
## Calculate number of connections in each graph
adj.mmhc = amat (mmhc.dag)
connections.mmhc = sum(adj.mmhc==1)/2 # Because matrixes are symetric
adj.org = amat(org.dag)
connections.org = sum(adj.org==1)/2 # Because matrixes are symetric
cat("Edges MMHC: ", connections.mmhc, "\nEdges Manual: ", connections.org)
## Check how many edges are different
tmp = adj.mmhc + adj.org
dissimilarities = sum(tmp==1)/2 # Because matrixes are symetric
cat("\nNumber of different edges between graphs: ", dissimilarities)
tmp1 = graph_from_adjacency_matrix(adj.mmhc, mode = "undirected")
tmp2 = graph_from_adjacency_matrix(adj.org, mode = "undirected")
meanDist.mmhc = mean_distance(tmp1, directed=FALSE, unconnected = TRUE)
meanDist.org = mean_distance(tmp2, directed=FALSE, unconnected = TRUE)
cat("\nMean length distance MMHC: ", meanDist.mmhc)
cat("\nMean length distance Manual: ", meanDist.org)
par(mfrow = c(1,2))
cat("####### Comparing MMHC and manually created graph #######\n")
plot(si.hiton.pc.dag, main = "SI-HITON-PC (Restart = 10 & Perturb=200)")
plot(org.dag, main = "Manually created graph")
cat("Edges SI-HITON-PC: ", connections.si.hiton.pc, "\nEdges Manual: ", connections.org)
## Check how many edges are different
tmp = adj.si.hiton.pc + adj.org
dissimilarities = sum(tmp==1)/2 # Because matrixes are symetric
cat("\nNumber of different edges between graphs: ", dissimilarities)
cat("\nMean length distance SI-HITON-PC: ", meanDist.si.hiton.pc)
cat("\nMean length distance Manual: ", meanDist.org)
